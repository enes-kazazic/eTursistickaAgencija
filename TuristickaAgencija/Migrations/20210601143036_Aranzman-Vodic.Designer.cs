// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuristickaAgencija;
using TuristickaAgencija.Data;

namespace TuristickaAgencija.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210601143036_Aranzman-Vodic")]
    partial class AranzmanVodic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TuristickaAgencija.Data.Models.Aranzman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<int>("VodicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VodicId");

                    b.ToTable("Aranzman");
                });

            modelBuilder.Entity("TuristickaAgencija.Data.Models.DestinacijaAranzman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AranzmanId")
                        .HasColumnType("int");

                    b.Property<int>("DestinacijaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AranzmanId");

                    b.HasIndex("DestinacijaId");

                    b.ToTable("DestinacijaAranzman");
                });

            modelBuilder.Entity("TuristickaAgencija.Data.Models.Vodic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vodic");
                });

            modelBuilder.Entity("TuristickaAgencija.Data.Models.DestinacijaAranzman", b =>
                {
                    b.HasOne("TuristickaAgencija.Data.Models.Aranzman", "Aranzman")
                        .WithMany()
                        .HasForeignKey("AranzmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuristickaAgencija.Data.Models.Destinacija", "Destinacija")
                        .WithMany()
                        .HasForeignKey("DestinacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
